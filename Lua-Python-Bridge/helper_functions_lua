index_outputs ={"Mario_x","Mario_y"}
index_inputs = {"A","B","Y","X","Left","Right","Up","Down"}


function read_inputs_from_file(filepath)
    inputs_raw = {}
    file = io.open(filepath, "rb")
    i = 0
    repeat 
        i = i+1
    inputs_raw[i] = file:read("*l")
    until i == #index_inputs

    inputs_processed = {}
    j = 1
    repeat 
        for word in string.gmatch(inputs_raw[j],"([^:]*)$") do 
            if word=="True" then
                inputs_processed[j] = true
            else 
                inputs_processed[j] = false
            end
            --print(inputs_processed[j])
            --print(type(inputs_processed[j]))
            
            
        end
        j = j+1
        
    until j == 9
    io.close()
    return inputs_processed
end


function write_outputs_to_file(filepath, outputs)
    file = io.open(filepath, "wb")
    i = 0
    repeat
        i = i+1
        file:write(index_outputs[i],":",outputs[i],"\n")
    until i == #index_outputs
    io.close()
end


function get_data()
    outputs = {}
    outputs[1] = memory.read_s16_le(0x94)   --Mario x
    outputs[2] = memory.read_s16_le(0x96)   --Mario y
    return outputs
end

function set_inputs(inputs_processed)
    input = {}
    i = 0
    repeat
        i = i +1 
        input[index_inputs[i]] = inputs_processed[i]
    until i == #index_inputs
    joypad.set(input,1)
end


function test_inputs()
    --TODO implement loading Rom and Safestate
    i = 0
    while i <= 1000 do
        input = {false,false,false,false,false,false,true,false}
        set_inputs(input)
        emu.frameadvance()
        input = {true,false,false,false,false,false,false,false}
        set_inputs(input)
        emu.frameadvance()
        i = i+1
    end
end

--read_inputs_from_file("/Users/fynnmadrian/mAIrio/Lua-Python-Bridge/inputs")